datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  fullname      String?
  username      String    @unique
  password      String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  PlayList  PlayList[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model PlayList {
  id        String   @id @default(cuid())
  name      String
  image     String?
  tracks    Track[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id         String   @id @default(cuid())
  playlist   PlayList @relation(fields: [playlistId], references: [id])
  playlistId String
}
